// StickyPlayer SCSS


// ---------------------------------------------------------------------------
// VARIABLES
// ---------------------------------------------------------------------------

$player-height: 60px;
$player-padding: 5px;


// ---------------------------------------------------------------------------
// EXTENSIONS
// ---------------------------------------------------------------------------

%full-size
{
    height: 100%;
    width: 100%;
}

%overlay
{
    @extend %full-size;
    position: absolute;
    top: 0;
    left: 0;
}


// ---------------------------------------------------------------------------
// MIXINS
// ---------------------------------------------------------------------------

@mixin border-radius( $radius )
{
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin transition( $value... )
{
    -webkit-transition: $value;
    -moz-transition: $value;
    -o-transition: $value;
    transition: $value;
}


// ---------------------------------------------------------------------------
// RULES
// ---------------------------------------------------------------------------

body
{
    &.sticky-player-open
    {
        margin-bottom: $player-height;
    }
}

.sticky-player
{
    position: fixed;
    bottom: -$player-height;
    height: $player-height;
    width: 100%;
    left: 0;
    padding: $player-padding;
    z-index: 1031;
    background-color: #f5f5f5;

    @include transition( height 0.5s, bottom 0.5s );

    &.open
    {
        bottom: 0px;
    }

    > .container
    {
        padding: 0;
        position: relative;
        font-size: 0.9em;
        letter-spacing: -0.05em;
    }

    .artwork-container
    {
        float: left;
        height: $player-height - (2 * $player-padding);
        width: $player-height - (2 * $player-padding);
        margin-right: $player-padding;
        overflow: hidden;
        position: relative;
        @include border-radius( 4px );

        > div
        {
            @extend %overlay;
        }

        .loading, .playpause
        {
            opacity: 0;
            background-position: center;
            background-repeat: no-repeat;
        }

        .loading
        {
            background-image: url('player-loading.gif');
            background-size: 75%;
            @include transition( opacity 0.3s ease-out );

            @at-root #{selector-replace(&, '.sticky-player', '.sticky-player.loading')}
            {
                opacity: 0.75;
            }
        }

        .playpause
        {
            background-size: 100%;
            cursor: pointer;
            @include transition( opacity 0.1s ease-out );

            @at-root #{selector-replace(&, '.artwork-container', '.artwork-container:hover')}
            {
                opacity: 0.8;
            }

            @at-root #{selector-replace(&, '.sticky-player', '.sticky-player.loading')}
            {
                opacity: 0;
            }

            @at-root #{selector-replace(&, '.sticky-player', '.sticky-player.playing')}
            {
                background-image: url('pause-button.png');
            }

            @at-root #{selector-replace(&, '.sticky-player', '.sticky-player.paused')}
            {
                background-image: url('play-button.png');
            }
        }
    }

    .players > div
    {
        @include border-radius( 4px );
        overflow: hidden;
    }

    .artwork
    {
        background-size: 100%;
        background-repeat: no-repeat;
        background-position: center;

        @at-root #{selector-replace(&, '.sticky-player', '.sticky-player.youtube')}
        {
            display: none;
        }
    }

    .title-container
    {
        margin-bottom: 2px;
        line-height: 1.6em;
        font-size: 1.2em;

        .title
        {
            height: 27px;
            white-space: nowrap;
            padding: 1px;
            overflow: hidden;
        }
    }

    .progress-container
    {
        float: left;
        position: relative;
        cursor: pointer;
        overflow: hidden;
        width: calc(100% - 55px);

        .progress
        {
            margin-bottom: 10px;
            position: relative;
            background: #C3C3C3;
            background: -webkit-linear-gradient(top, #E0E0E0 0%, #C3C3C3 100%);
            background: linear-gradient(to bottom, #E0E0E0 0%, #C3C3C3 100%);
            border: 0px solid rgba(255, 255, 255, 1);
            border-radius: 4px;
            height: 20px;
        }
        .progress-bar-custom
        {
            background: rgba(160, 162, 163, 1);
            background: -webkit-linear-gradient(top, rgba(201, 201, 201, 1) 0%, rgba(160, 162, 163, 1) 100%);
            background: linear-gradient(to bottom, rgba(201, 201, 201, 1) 0%, rgba(160, 162, 163, 1) 100%);
        }
        .progress-bar-striped
        {
            background-color: rgba(184, 184, 184, 1);
            background-image: -webkit-gradient(linear,0 100%,100% 0,color-stop(0.25,rgba(102, 102, 102, 0.15),color-stop(0.25,transparent),color-stop(0.5,transparent),color-stop(0.5,rgba(102, 102, 102, 0.15)),color-stop(0.75,rgba(102, 102, 102, 0.15)),color-stop(0.75,transparent),to(transparent)));
            background-image: -webkit-linear-gradient(45deg,rgba(102, 102, 102, 0.15) 25%,transparent 25%,transparent 50%,rgba(102, 102, 102, 0.15) 50%,rgba(102, 102, 102, 0.15) 75%,transparent 75%,transparent);
            background-image: linear-gradient(45deg,rgba(102, 102, 102, 0.15) 25%,transparent 25%,transparent 50%,rgba(102, 102, 102, 0.15) 50%,rgba(102, 102, 102, 0.15) 75%,transparent 75%,transparent);
            background-size: 10px 10px;
        }

        .progress-bar
        {
            @include transition( width 1s linear );

            &.shorttransition
            {
                @include transition( 0.1s ease-out !important );
            }
        }

        .waveform
        {
            @extend %overlay;
            background-size: 100% 100%;
            display: none;

            @at-root #{selector-replace(&, '.sticky-player', '.sticky-player.soundcloud')}
            {
                display: block;
            }
        }

        .time
        {
            position: absolute;
            top: 0;
            height: 100%;
            line-height: 20px;
            padding: 0 3px;
            pointer-events: none;
            font-size: 0.9em;
            color: #444;
            letter-spacing: 0em;

            &.elapsed
            {
                left: 0;
            }

            &.duration
            {
                right: 0;
            }
        }
    }

    &.interaction-required
    {
        @extend %full-size;

        .container
        {
            @extend %full-size;
        }

        .artwork-container
        {
            @extend %full-size;
        }

        .artwork, .loading, .playpause
        {
            display: none;
        }

        .players
        {
            p
            {
                display: block;
                font-size: 1.9em;
            }
            > div
            {
                margin-top: 10px;
                height: calc(100% - 85px);
            }
            iframe
            {
                @extend %full-size;
                visibility: visible;
            }
        }
    }
}